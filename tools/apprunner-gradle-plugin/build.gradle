plugins {
  id 'java-gradle-plugin'
  id 'maven-publish'
  id 'com.gradle.plugin-publish' version '0.12.0'
}

def readVersion(expr) {
  def buffer = new ByteArrayOutputStream()
  exec {
    commandLine = ['../../mvnw', 'help:evaluate', "-Dexpression=$expr", '-q', '-DforceStdout', '-f', '../../pom.xml']
    standardOutput = buffer
  }.assertNormalExitValue()
  return buffer.toString()
}

def quarkusVersion = readVersion('quarkus.version')
version = readVersion('project.version')

allprojects {
  group = "org.projectnessie"
  version = version
  repositories {
    mavenCentral()
    mavenLocal()
  }
}

gradlePlugin {
  plugins {
    simplePlugin {
      id = 'org.projectnessie'
      implementationClass = 'org.projectnessie.quarkus.gradle.QuarkusAppPlugin'
      displayName = 'Quarkus App Runner'
      description = 'Start and stop a quarkus app as gradle tasks for integration testing'
    }
  }
}

repositories {
  mavenCentral()
}

compileJava {
  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'
}

dependencies {
  implementation platform("io.quarkus:quarkus-bom:${quarkusVersion}")

  compile "io.quarkus:quarkus-bootstrap-core"
  compile "org.projectnessie:nessie-apprunner-maven-plugin:$version"
  compile "org.eclipse.microprofile.config:microprofile-config-api"
}

pluginBundle {
  website = 'https://projectnessie.org'
  vcsUrl = 'https://github.com/projectnessie/nessie'
  tags = ['test', 'integration', 'quarkus']
}

publishing {
  publications {
    maven(MavenPublication) {
      groupId = 'org.projectnessie'
      artifactId = 'nessie-apprunner-gradle-plugin'
      version = version

      from components.java
    }
  }
}
